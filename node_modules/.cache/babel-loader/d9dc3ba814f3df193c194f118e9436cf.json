{"ast":null,"code":"import _toConsumableArray from\"/home/karin/Dokumente/Uni/SS23/React/IT Design/cat_calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/karin/Dokumente/Uni/SS23/React/IT Design/cat_calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useCallback}from\"react\";import{Layout}from\"./components/Layout\";import{ExpressionInput}from\"./components/ExpressionInput\";import{Results}from\"./components/Results\";import Calculation from\"./logic/calculation\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var App=function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),result=_useState2[0],setResult=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),stateHistory=_useState4[0],setStateHistory=_useState4[1];var deleteHistory=function deleteHistory(){setStateHistory([]);};var calculateResult=useCallback(function(input){setResult(function(prevResult){// update stateHistory to save prevResult (only if input was valid)\nsetStateHistory(function(prevStateHistory){if(prevResult===\"Wrong input!\")return prevStateHistory;return[prevResult].concat(_toConsumableArray(prevStateHistory));});// return calculation of current input\nvar calculation=new Calculation(input);var currentResult=calculation.calculate();return currentResult?calculation.parseInput()+\" = \"+currentResult:\"Wrong input!\";});},[setResult]);return/*#__PURE__*/_jsxs(Layout,{children:[/*#__PURE__*/_jsx(ExpressionInput,{handleSubmit:calculateResult}),/*#__PURE__*/_jsx(Results,{result:result,history:stateHistory,deleteHistory:deleteHistory})]});};","map":{"version":3,"sources":["/home/karin/Dokumente/Uni/SS23/React/IT Design/cat_calculator/src/App.jsx"],"names":["useState","useCallback","Layout","ExpressionInput","Results","Calculation","App","result","setResult","stateHistory","setStateHistory","deleteHistory","calculateResult","input","prevResult","prevStateHistory","calculation","currentResult","calculate","parseInput"],"mappings":"gXAAA,OAASA,QAAT,CAAmBC,WAAnB,KAAsC,OAAtC,CACA,OAASC,MAAT,KAAuB,qBAAvB,CACA,OAASC,eAAT,KAAgC,8BAAhC,CACA,OAASC,OAAT,KAAwB,sBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,C,wFAEA,MAAO,IAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CACvB,cAA4BN,QAAQ,CAAC,EAAD,CAApC,wCAAOO,MAAP,eAAeC,SAAf,eACA,eAAwCR,QAAQ,CAAC,EAAD,CAAhD,yCAAOS,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BD,eAAe,CAAC,EAAD,CAAf,CACD,CAFD,CAIA,GAAME,CAAAA,eAAe,CAAGX,WAAW,CACjC,SAACY,KAAD,CAAW,CACTL,SAAS,CAAC,SAACM,UAAD,CAAgB,CACxB;AACAJ,eAAe,CAAE,SAAAK,gBAAgB,CAAI,CACnC,GAAGD,UAAU,GAAK,cAAlB,CAAkC,MAAOC,CAAAA,gBAAP,CAClC,OAAQD,UAAR,4BAAuBC,gBAAvB,GACD,CAHc,CAAf,CAIA;AACA,GAAIC,CAAAA,WAAW,CAAG,GAAIX,CAAAA,WAAJ,CAAgBQ,KAAhB,CAAlB,CACA,GAAII,CAAAA,aAAa,CAAGD,WAAW,CAACE,SAAZ,EAApB,CACA,MAAOD,CAAAA,aAAa,CAAID,WAAW,CAACG,UAAZ,GAA2B,KAA3B,CAAmCF,aAAvC,CAAuD,cAA3E,CACD,CAVQ,CAAT,CAWD,CAbgC,CAcjC,CAACT,SAAD,CAdiC,CAAnC,CAiBA,mBACE,MAAC,MAAD,yBACE,KAAC,eAAD,EAAiB,YAAY,CAAEI,eAA/B,EADF,cAEE,KAAC,OAAD,EAAS,MAAM,CAAEL,MAAjB,CAAyB,OAAO,CAAEE,YAAlC,CAAgD,aAAa,CAAEE,aAA/D,EAFF,GADF,CAMD,CA/BM","sourcesContent":["import { useState, useCallback } from \"react\";\nimport { Layout } from \"./components/Layout\";\nimport { ExpressionInput } from \"./components/ExpressionInput\";\nimport { Results } from \"./components/Results\";\nimport Calculation from \"./logic/calculation\";\n\nexport const App = () => {\n  const [result, setResult] = useState(\"\");\n  const [stateHistory, setStateHistory] = useState([]);\n\n  const deleteHistory = () => {\n    setStateHistory([]);\n  }\n\n  const calculateResult = useCallback(\n    (input) => {\n      setResult((prevResult) => {\n        // update stateHistory to save prevResult (only if input was valid)\n        setStateHistory((prevStateHistory => {\n          if(prevResult === \"Wrong input!\") return prevStateHistory;\n          return [prevResult, ...prevStateHistory];\n        }));\n        // return calculation of current input\n        let calculation = new Calculation(input);\n        let currentResult = calculation.calculate();\n        return currentResult ?  calculation.parseInput() + \" = \" + currentResult : \"Wrong input!\";\n      });\n    },\n    [setResult]\n  );\n\n  return (\n    <Layout>\n      <ExpressionInput handleSubmit={calculateResult} />\n      <Results result={result} history={stateHistory} deleteHistory={deleteHistory} />\n    </Layout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}