{"ast":null,"code":"export default class Calculation {\n  constructor(expression) {\n    this.expression = expression;\n  }\n\n  validateInput() {\n    // validate expression first (only based on characters)\n    const validExpression = /^[0-9.+\\-*/\\s]+$/; // Regular expression to match valid characters\n\n    console.log(\"expression is \" + this.expression);\n    return validExpression.test(this.expression);\n  }\n\n  evaluate() {\n    if (!this.validateInput()) return undefined; // split into array\n\n    const splitExpression = this.expression.match(/(\\d+(\\.\\d+)?|\\*|\\/|\\+|\\-)/g);\n    console.log(splitExpression);\n  }\n\n  calculate() {\n    /**\n     * @TODO Add your implementaiton here\n     */\n    console.log(\"calculate is being called\");\n    return this.evaluate();\n  }\n\n}","map":{"version":3,"sources":["/home/karin/Dokumente/Uni/SS23/React/IT Design/java-script-react-karin-haslauer/src/logic/calculation.js"],"names":["Calculation","constructor","expression","validateInput","validExpression","console","log","test","evaluate","undefined","splitExpression","match","calculate"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CAAkB;AAC7BC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKA,UAAL,GAAkBA,UAAlB;AACH;;AAEDC,EAAAA,aAAa,GAAG;AACZ;AACA,UAAMC,eAAe,GAAG,kBAAxB,CAFY,CAEgC;;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAkB,KAAKJ,UAAnC;AACA,WAAOE,eAAe,CAACG,IAAhB,CAAqB,KAAKL,UAA1B,CAAP;AACH;;AAEDM,EAAAA,QAAQ,GAAG;AACP,QAAG,CAAC,KAAKL,aAAL,EAAJ,EAA0B,OAAOM,SAAP,CADnB,CAGP;;AACA,UAAMC,eAAe,GAAG,KAAKR,UAAL,CAAgBS,KAAhB,CAAsB,4BAAtB,CAAxB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,eAAZ;AAEH;;AAEDE,EAAAA,SAAS,GAAG;AACR;AACR;AACA;AACQP,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,WAAO,KAAKE,QAAL,EAAP;AACH;;AA3B4B","sourcesContent":["export default class Calculation {\n    constructor(expression) {\n        this.expression = expression;\n    }\n\n    validateInput() {\n        // validate expression first (only based on characters)\n        const validExpression = /^[0-9.+\\-*/\\s]+$/; // Regular expression to match valid characters\n        console.log(\"expression is \"+ this.expression);\n        return validExpression.test(this.expression);\n    }\n\n    evaluate() {\n        if(!this.validateInput()) return undefined;\n\n        // split into array\n        const splitExpression = this.expression.match(/(\\d+(\\.\\d+)?|\\*|\\/|\\+|\\-)/g);\n        console.log(splitExpression);\n\n    }\n\n    calculate() {\n        /**\n         * @TODO Add your implementaiton here\n         */\n        console.log(\"calculate is being called\");\n        return this.evaluate();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}