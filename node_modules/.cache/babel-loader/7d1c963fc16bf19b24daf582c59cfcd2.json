{"ast":null,"code":"var _jsxFileName = \"/home/karin/Dokumente/Uni/SS23/React/IT Design/java-script-react-karin-haslauer/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { Layout } from \"./components/Layout\";\nimport { ExpressionInput } from \"./components/ExpressionInput\";\nimport { Results } from \"./components/Results\";\nimport Calculation from \"./logic/calculation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [result, setResult] = useState(\"\");\n  const [stateHistory, setStateHistory] = useState([]);\n\n  const deleteHistory = () => {\n    console.log(\"from deleteHistory\");\n    setStateHistory([]);\n  };\n\n  const calculateResult = useCallback(input => {\n    // console.log(input);\n    setResult(prevResult => {\n      var _Calculation$calculat;\n\n      // update state history to save prevResult\n      setStateHistory(prevStateHistory => {\n        return [prevResult, ...prevStateHistory];\n      }); // return calculation of current input\n\n      return (_Calculation$calculat = new Calculation(input).calculate()) !== null && _Calculation$calculat !== void 0 ? _Calculation$calculat : \"Wrong input!\";\n    });\n  }, [setResult]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(ExpressionInput, {\n      handleSubmit: calculateResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      result: result,\n      history: stateHistory,\n      deleteHistory: deleteHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"fni8tCQBsuesmQgN7ymP4yihHSs=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/karin/Dokumente/Uni/SS23/React/IT Design/java-script-react-karin-haslauer/src/App.jsx"],"names":["useState","useCallback","Layout","ExpressionInput","Results","Calculation","App","result","setResult","stateHistory","setStateHistory","deleteHistory","console","log","calculateResult","input","prevResult","prevStateHistory","calculate"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMW,aAAa,GAAG,MAAM;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAH,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GAHD;;AAKA,QAAMI,eAAe,GAAGb,WAAW,CAChCc,KAAD,IAAW;AACT;AACAP,IAAAA,SAAS,CAAEQ,UAAD,IAAgB;AAAA;;AACxB;AACAN,MAAAA,eAAe,CAAEO,gBAAgB,IAAI;AACnC,eAAO,CAACD,UAAD,EAAa,GAAGC,gBAAhB,CAAP;AACD,OAFc,CAAf,CAFwB,CAKxB;;AACA,sCAAO,IAAIZ,WAAJ,CAAgBU,KAAhB,EAAuBG,SAAvB,EAAP,yEAA6C,cAA7C;AACD,KAPQ,CAAT;AAQD,GAXgC,EAYjC,CAACV,SAAD,CAZiC,CAAnC;AAeA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,YAAY,EAAEM;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEP,MAAjB;AAAyB,MAAA,OAAO,EAAEE,YAAlC;AAAgD,MAAA,aAAa,EAAEE;AAA/D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA9BM;;GAAML,G;;KAAAA,G","sourcesContent":["import { useState, useCallback } from \"react\";\nimport { Layout } from \"./components/Layout\";\nimport { ExpressionInput } from \"./components/ExpressionInput\";\nimport { Results } from \"./components/Results\";\nimport Calculation from \"./logic/calculation\";\n\nexport const App = () => {\n  const [result, setResult] = useState(\"\");\n  const [stateHistory, setStateHistory] = useState([]);\n\n  const deleteHistory = () => {\n    console.log(\"from deleteHistory\");\n    setStateHistory([]);\n  }\n\n  const calculateResult = useCallback(\n    (input) => {\n      // console.log(input);\n      setResult((prevResult) => {\n        // update state history to save prevResult\n        setStateHistory((prevStateHistory => {\n          return [prevResult, ...prevStateHistory];\n        }));\n        // return calculation of current input\n        return new Calculation(input).calculate() ?? \"Wrong input!\"\n      });\n    },\n    [setResult]\n  );\n\n  return (\n    <Layout>\n      <ExpressionInput handleSubmit={calculateResult} />\n      <Results result={result} history={stateHistory} deleteHistory={deleteHistory}/>\n    </Layout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}